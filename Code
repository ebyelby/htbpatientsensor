//Embedded C++

#include "ThingSpeak.h"

#if defined(ARDUINO_ARCH_ESP8266)
    // Use WiFi
    #include <ESP8266WiFi.h>

charssid[] = "VR";    //  your network SSID (name) 
char pass[] = "123456789";   // your network password
int status = WL_IDLE_STATUS;
WiFiClient  client;
#endif

#if ARDUINO_ARCH_ESP8266
  // On ESP8266:  0 - 1023 maps to 0 - 1 volts
  #define VOLTAGE_MAX 1.0
  #define VOLTAGE_MAXCOUNTS 1023.0
#endif
unsigned long myChannelNumber = 362111;
const char * myWriteAPIKey = "SLTC6XF2ZT6QW6D7";
char a[10];
char bpm[3]; intbpmm=0;
char diastolic[3];intdiastolicc=0;
char systolic[3];intsystolicc=0;
int j=0;

void setup() 
{

  #if defined(ARDUINO_ARCH_ESP8266)
WiFi.begin(ssid, pass);
    #else
Ethernet.begin(mac);
    #endif
  #endif

ThingSpeak.begin(client);
pinMode(5,OUTPUT);
}

void loop() {

while (Serial.available() > 0) 
	{

		for(inti=0;i<10;i++)
		{
			a[i]=Serial.read();

		}
		j=0;
		for(inti=0;i<=1;i++)
		{
			bpm[j] = a[i];
			j++;
		}
		bpm[j]='\0';
		bpmm=atoi(bpm);
		j=0;
		for(inti=3;i<=5;i++)
		{
			diastolic[j]=a[i];
			j++;
		}
		diastolic[j]='\0';
		diastolicc=atoi(diastolic);
		j=0;
		for(inti=7;i<=9;i++)
		{
			systolic[j]=a[i];
			j++;
		}
		systolic[j]='\0';
		systolicc=atoi(systolic);
    }
// read the input on analog pin 0:
intsensorValue = analogRead(A0);

float temp = sensorValue * .483;
if((temp>36.0)||(systolicc> 130)||(diastolicc>90) ||(bpmm> 80))
   {
digitalWrite(5,HIGH);
delay(2000);
digitalWrite(5,LOW);

    }

  // Write to ThingSpeak. There are up to 8 fields in a channel, allowing you to store up to 8 different
  // pieces of information in a channel.  Here, we write to field 1.
ThingSpeak.writeField(myChannelNumber,1,temp,myWriteAPIKey);
ThingSpeak.writeField(myChannelNumber,2,diastolicc,myWriteAPIKey);
ThingSpeak.writeField(myChannelNumber,3,systolicc,myWriteAPIKey);
ThingSpeak.writeField(myChannelNumber,4,bpmm,myWriteAPIKey);
delay(10000); // ThingSpeak will only accept updates every 10 seconds.
}


